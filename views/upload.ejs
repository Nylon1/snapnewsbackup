<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Upload | SnapNews</title>
  <style>
    body { margin: 0; background-color: #111; color: #fff; font-family: 'Segoe UI', sans-serif; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; }
    form { display: flex; flex-direction: column; align-items: center; background-color: #1c1c1c; padding: 2rem; border-radius: 20px; box-shadow: 0 8px 20px rgba(0,0,0,0.5), 0 4px 10px rgba(0,0,0,0.3); transition: transform 0.3s ease; }
    form:hover { transform: translateY(-5px); }
    .upload-label { font-size: 5rem; cursor: pointer; color: #888; border: 3px dashed #333; border-radius: 50%; width: 160px; height: 160px; display: flex; align-items: center; justify-content: center; transition: all 0.3s ease; animation: pulse 2s infinite; }
    .upload-label:hover { background-color: #222; color: #0af; border-color: #0af; transform: scale(1.05); }
    input[type="file"] { display: none; }
    input[type="text"], select { margin-top: 1rem; padding: 0.5rem; width: 100%; max-width: 300px; border: none; border-radius: 8px; box-shadow: inset 0 0 5px rgba(0,0,0,0.3); transition: all 0.2s ease; }
    input[type="text"]:hover, select:hover { background-color: #222; color: #0af; }
    input[type="text"]:focus, select:focus { outline: none; box-shadow: 0 0 8px #0af; background-color: #222; }
    button { margin-top: 1rem; padding: 0.75rem 2rem; font-size: 1rem; background-color: #0af; color: #fff; border: none; border-radius: 8px; box-shadow: 0 4px 10px rgba(0,170,255,0.3); cursor: pointer; transition: all 0.3s ease; }
    button:hover { background-color: #08c; box-shadow: 0 6px 16px rgba(0,170,255,0.5); transform: translateY(-2px); }
    .progress-bar { width: 100%; max-width: 300px; height: 8px; background-color: #333; border-radius: 4px; margin-top: 1rem; overflow: hidden; display: none; }
    .progress-bar-fill { height: 100%; background-color: #0af; width: 0%; transition: width 0.3s ease; }
    @keyframes pulse { 0%, 100% { transform: scale(1); } 50% { transform: scale(1.07); } }
  </style>
</head>
<body>
  <form id="uploadForm" enctype="multipart/form-data">
    <label for="video" class="upload-label" id="plusLabel">+</label>
    <input type="file" name="video" id="video" />

    <input type="text" name="title" placeholder="Video Title" required />
    <input type="text" name="description" placeholder="Short Description" required />

    <select name="category" required>
      <option value="">Choose Category</option>
      <option value="World">World</option>
      <option value="Travel">Travel</option>
      <option value="Food">Food</option>
      <option value="Money">Money</option>
      <option value="Health">Health</option>
    </select>

    <button type="submit">Upload</button>

    <div class="progress-bar" id="progressContainer">
      <div class="progress-bar-fill" id="progressBar"></div>
    </div>
  </form>

  <script>
 
    const API_BASE = 'https://snapbackend-new.onrender.com';

    // 2️⃣ Auto-click the hidden file input on load
    window.addEventListener('DOMContentLoaded', () => {
      setTimeout(() => document.getElementById('video').click(), 500);
    });

    // 3️⃣ Style the label when a file is chosen
    document.getElementById('video').addEventListener('change', () => {
      document.getElementById('plusLabel').style.color = '#0af';
      document.getElementById('plusLabel').style.borderColor = '#0af';
    });

    // 4️⃣ Handle the form submit via AJAX
    document.getElementById('uploadForm').addEventListener('submit', function(e) {
      e.preventDefault();

      const formData = new FormData(this);
      const xhr = new XMLHttpRequest();
      const progressBar = document.getElementById('progressBar');
      const progressContainer = document.getElementById('progressContainer');

      // show the progress bar
      progressContainer.style.display = 'block';

      // update progress
      xhr.upload.addEventListener('progress', event => {
        if (event.lengthComputable) {
          const percent = (event.loaded / event.total) * 100;
          progressBar.style.width = percent + '%';
        }
      });

      // configure and send
      xhr.open('POST', API_BASE + '/upload');

   xhr.onload = () => {
  if (xhr.status >= 200 && xhr.status < 300) {
    // redirect into the backend-served feed
    window.location.href = API_BASE + '/feed';
  } else {
    alert('Upload failed: ' + xhr.responseText);
  }
};


      xhr.onerror = () => alert('Network error during upload');
      xhr.send(formData);
    });
  </script>
</body>
</html>
